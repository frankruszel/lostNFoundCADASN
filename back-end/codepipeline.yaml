AWSTemplateFormatVersion : '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  This template deploys a CodePipeline with its required resources.

  The following stages are predefined in this template:
  - Source
  - UpdatePipeline
  - BuildAndPackage (MainGitBranch only)
  - DeployProd (MainGitBranch only)

  **WARNING** You will be billed for the AWS resources used if you create a stack from this template.

# To deploy this template and connect to the main git branch, run this against the leading account:
# `sam deploy --config-file pipeline/samconfig-pipeline.toml --config-env pipeline`.

Metadata:
  cfn-lint:
    config:
      ignore_checks:
        - I3011
        - I3013

Parameters:
  ProjectSubfolder:
    Type: String
    Default: "back-end"
  MainGitBranch:
    Type: String
    Default: "main"
  MonorepoSsmPrefix:
    Type: String
    Default: "Monorepo"
  CodeBuildImage:
    Type: String
    Default: aws/codebuild/amazonlinux2-x86_64-standard:5.0
  # Stage Parameters
  ProdConfigEnvName:
    Type: String
    Default: "1"
  ProdPipelineExecutionRole:
    Type: String
    Default: "arn:aws:iam::273354638471:role/aws-sam-cli-managed-prod-pipe-PipelineExecutionRole-U45rKMFKJJYs"
  ProdCloudFormationExecutionExeRole:
    Type: String
    Default: "arn:aws:iam::273354638471:role/aws-sam-cli-managed-prod--CloudFormationExecutionRo-IRFbrWIgMNqt"
  GithubOwner:
    AllowedPattern: ".+"
    Type: String
    Description: "Github repo owner"
    Default: "EcoWiseTech"
  AppRepositoryName:
    Description: Name of the Github Repository
    Type: String
    Default: "lostNFoundCADASN"
  GithubBranch:
    AllowedPattern: ".+"
    Type: String
    Description: "Github branch name e.g. development"
    Default: "main"
  ProdApprovalSNSEmail:
    Type: String
    Default: "frankruszel@gmail.com"
  ResourceNamePrefix:
    Description: Please specify the prefix for all the resources
    Type: String
    Default: "frankcad"
  ProdStackName:
    Description: Please specify the stack name
    Type: String
    Default: "sam-prod"

Resources:
  GithubConnection:
    Type: AWS::CodeStarConnections::Connection
    Properties:
      ConnectionName: !Sub ${ResourceNamePrefix}-GithubConnection
      ProviderType: GitHub
  ProdApprovalTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub "${ResourceNamePrefix}-prod-approval-topic"
      DisplayName: !Sub "${ResourceNamePrefix}-prod-approval"
      Subscription:
        - 
          Endpoint:
            Ref: ProdApprovalSNSEmail
          Protocol: "email"

  #  ____  _            _ _
  # |  _ \(_)_ __   ___| (_)_ __   ___
  # | |_) | | '_ \ / _ | | | '_ \ / _ \
  # |  __/| | |_) |  __| | | | | |  __/
  # |_|   |_| .__/ \___|_|_|_| |_|\___|
  #         |_|
  Pipeline:
    DependsOn: GithubConnection
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref PipelineArtifactsBucket
        Type: S3
      RoleArn: !GetAtt CodePipelineExecutionRole.Arn
      RestartExecutionOnUpdate: true
      PipelineType: "V2" 
      Triggers:
        - GitConfiguration: 
            SourceActionName: "Source-Action"
            Push:
              - Branches:
                  Includes: 
                    - !Ref GithubBranch
                FilePaths:
                  Includes:
                    - "back-end/**"
                  Excludes:
                    - "front-end/**"
                
          ProviderType: "CodeStarSourceConnection"
      Stages:
        - Name: Source-Action
          Actions:
            - ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              Configuration:
                ConnectionArn: !Ref GithubConnection
                FullRepositoryId: !Sub "${GithubOwner}/${AppRepositoryName}"
                BranchName: !Ref GithubBranch
              Name: Source-Action
              OutputArtifacts:
                - Name: SourceCodeAsZip
              RunOrder: 1
        - Name: UpdatePipeline
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt PipelineStackCloudFormationExecutionRole.Arn
                StackName: !Ref AWS::StackName
                ChangeSetName: !Sub ${AWS::StackName}-ChangeSet
                TemplatePath: !Sub "SourceCodeAsZip::${ProjectSubfolder}/codepipeline.yaml"
                Capabilities: CAPABILITY_NAMED_IAM
              InputArtifacts:
                - Name: SourceCodeAsZip
              RunOrder: 1
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !GetAtt PipelineStackCloudFormationExecutionRole.Arn
                StackName: !Ref AWS::StackName
                ChangeSetName: !Sub ${AWS::StackName}-ChangeSet
              OutputArtifacts:
                - Name: !Sub ${AWS::StackName}ChangeSet
              RunOrder: 2
        - Name: BuildAndPackage
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref CodeBuildProjectBuildAndPackage
              InputArtifacts:
                - Name: SourceCodeAsZip
              OutputArtifacts:
                - Name: BuildArtifactAsZip
        - Name: DeployProd
          Actions:
            # uncomment this to have a manual approval step before deployment to production
            # - Name: ManualApproval
            #   ActionTypeId:
            #    Category: Approval
            #    Owner: AWS
            #    Provider: Manual
            #    Version: "1"
            #   RunOrder: 1
            - Name: DeployProd
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              RunOrder: 2 # keeping run order as 2 in case manual approval is enabled
              Configuration:
                ProjectName: !Ref CodeBuildProjectDeploy
                EnvironmentVariables: !Sub |
                  [
                    {"name": "ENV_NAME", "value": "prod"},
                    {"name": "ENV_CONFIG_NAME", "value": "${ProdConfigEnvName}"},
                    {"name": "ENV_PIPELINE_EXECUTION_ROLE", "value": "${ProdPipelineExecutionRole}"},
                    {"name": "ENV_CLOUDFORMATION_EXECUTION_ROLE", "value": "${ProdCloudFormationExecutionExeRole}"}
                  ]
              InputArtifacts:
                - Name: BuildArtifactAsZip

  PipelineArtifactsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      VersioningConfiguration:
        Status: Enabled
      LoggingConfiguration:
        DestinationBucketName: !Ref PipelineArtifactsLoggingBucket
        LogFilePrefix: "artifacts-logs"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  PipelineArtifactsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref PipelineArtifactsBucket
      PolicyDocument:
        Statement:
          - Effect: Deny
            Action: s3:*
            Principal: "*"
            Resource:
              - !Sub "${PipelineArtifactsBucket.Arn}/*"
              - !GetAtt PipelineArtifactsBucket.Arn
            Condition:
              Bool:
                aws:SecureTransport: false
          - Effect: Allow
            Action: s3:*
            Principal:
              AWS:
                - !GetAtt CodePipelineExecutionRole.Arn
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${PipelineArtifactsBucket}
              - !Sub arn:${AWS::Partition}:s3:::${PipelineArtifactsBucket}/*

  PipelineArtifactsLoggingBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      AccessControl: "LogDeliveryWrite"
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  PipelineArtifactsLoggingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref PipelineArtifactsLoggingBucket
      PolicyDocument:
        Statement:
          - Effect: Deny
            Action: s3:*
            Principal: "*"
            Resource:
              - !Sub "${PipelineArtifactsLoggingBucket.Arn}/*"
              - !GetAtt PipelineArtifactsLoggingBucket.Arn
            Condition:
              Bool:
                aws:SecureTransport: false

  CodePipelineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - codepipeline.amazonaws.com
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "iam:PassRole"
                Resource: "*"
        - PolicyName: GithubConnectionAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - codestar-connections:UseConnection
                Resource:
                  - !Ref GithubConnection
        - PolicyName: CodePipelineCodeAndS3Bucket
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                Resource:
                  - !GetAtt PipelineArtifactsBucket.Arn
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                Resource:
                  Fn::Sub: ${PipelineArtifactsBucket.Arn}/*
        - PolicyName: CodePipelineCodeBuildAndCloudformationAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                Resource:
                  - !GetAtt CodeBuildProjectBuildAndPackage.Arn
                  - !GetAtt CodeBuildProjectDeploy.Arn
              - Effect: Allow
                Action:
                  - cloudformation:CreateStack
                  - cloudformation:DescribeStacks
                  - cloudformation:DeleteStack
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:SetStackPolicy
                  - cloudformation:ValidateTemplate
                Resource:
                  - !Sub "arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AWS::StackName}/*"
              - Effect: Allow
                Action: 
                  - cloudformation:CreateStack
                  - cloudformation:DescribeStacks
                  - cloudformation:DeleteStack
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:SetStackPolicy
                  - cloudformation:ValidateTemplate
                Resource: 
                  - !Sub "arn:aws:cloudformation:us-east-1:${AWS::AccountId}:stack/${ProdStackName}/*"
              - Effect: Allow
                Action: 
                  - sns:Publish
                Resource: 
                  - !Sub "arn:aws:sns:us-east-1:${AWS::AccountId}:${ResourceNamePrefix}-prod-approval-topic"

                  
  # PipelineStackCloudFormationExecutionRole is used for the pipeline to self mutate
  PipelineStackCloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Action: sts:AssumeRole
          Principal:
            Service: cloudformation.amazonaws.com
      Policies:
        - PolicyName: GrantCloudFormationFullAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "*"
                Resource: "*"


  #   ____          _      ____        _ _     _
  #  / ___|___   __| | ___| __ ) _   _(_| | __| |
  # | |   / _ \ / _` |/ _ |  _ \| | | | | |/ _` |
  # | |__| (_) | (_| |  __| |_) | |_| | | | (_| |
  #  \____\___/ \__,_|\___|____/ \__,_|_|_|\__,_|
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: Role
          Value: aws-sam-pipeline-codebuild-service-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - codebuild.amazonaws.com
      Policies:
        - PolicyName: CodeBuildLogs
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*"
              - Effect: Allow
                Action:
                  - codeconnections:GetConnectionToken
                Resource:
                  - !Sub "arn:aws:codeconnections:${AWS::Region}:${AWS::AccountId}:connection/*"
        - PolicyName: CodeBuildArtifactsBucket
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::${PipelineArtifactsBucket}/*"
        - PolicyName: AssumeStagePipExecutionRoles
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: sts:AssumeRole
                Resource: "*"
                Condition:
                  StringEquals:
                    aws:ResourceTag/Role: pipeline-execution-role


  CodeBuildProjectBuildAndPackage:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: !Ref CodeBuildImage
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: env
            Value: "dev"
          - Name: PROJECT_SUBFOLDER
            Value: !Ref ProjectSubfolder
          - Name: PROD_PIPELINE_EXECUTION_ROLE
            Value: !Ref ProdPipelineExecutionRole
          - Name: PROD_ENV_CONFIG_NAME
            Value: !Ref ProdConfigEnvName
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub "${ProjectSubfolder}/pipeline/buildspec_build_package.yml"

  CodeBuildProjectDeploy:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: !Ref CodeBuildImage
        EnvironmentVariables:
          - Name: PROJECT_SUBFOLDER
            Value: !Ref ProjectSubfolder
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub "${ProjectSubfolder}/pipeline/buildspec_deploy.yml"

Outputs:
  CodePipelineUrl:
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/codesuite/codepipeline/pipelines/${Pipeline}/view?region=${AWS::Region}"
  CodePipelineExecutionRoleArn:
    Value: !GetAtt CodePipelineExecutionRole.Arn
  CodeBuildServiceRoleArn:
    Value: !GetAtt CodeBuildServiceRole.Arn
  PipelineArtifactsBucketName:
    Value: !Ref PipelineArtifactsBucket
  PipelineArtifactsLoggingBucketName:
    Value: !Ref PipelineArtifactsLoggingBucket
  GithubOwnerOutput:
    Value: !Ref GithubOwner
    Export:
      Name: GithubOwnerOutput
  AppRepositoryNameOutput:
    Value: !Ref AppRepositoryName
    Export:
      Name: AppRepositoryNameOutput
  ResourceNamePrefix:
    Value: !Ref ResourceNamePrefix
    Export:
      Name: ResourceNamePrefix
